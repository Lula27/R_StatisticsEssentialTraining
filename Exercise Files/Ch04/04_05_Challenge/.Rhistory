x <- skdata$x
hist(x)
skdata <- read.csv('C:\\Users\\loret\\Desktop\\DataSciencePrep\\R\\R_StatisticsEssentialTraining\\Exercise Files\\Ch04\\04_05_Challenge\\xskew.csv')
x <- skdata$x
hist(x)
require(psych)
kurtosi(x)
boxplot(x)
boxplot.stats(x)
x.log <- log(x)
hist(x.log)
boxplot.stats(x.log)
boxplot(x.log)
kurtosi(x)
kurtosi(x.log)
hist(x.log)
z.log = scale(x.log)
z.log
hist(z.log)
boxplot(z.log)
boxplot.stats(z.log)
hist(x.log)
boxplot(x.log)
boxplot.stats(x.log)
xskew <- read.csv("C:\\Users\\loret\\Desktop\\DataSciencePrep\\R\\R_StatisticsEssentialTraining\\Exercise Files\\Ch04\\04_05_Challenge\\xskew.csv")
x <- xskew[, 2]
View(xskew)
View(skdata)
View(x)
x
skdata
xskew
hist(x)
x <- xskew[, 2]  # to access second variable, select all rows & second column
hist(x)
x2 <- x^2
hist(x2)
boxplot(x2)
x4 <- x^4
hist(x4)
boxplot(x4)
hist(x4)
boxplot(x4)
x2 <- x^2
hist(x2)
boxplot(x2)
hist(x2) # still has
boxplot(x2) # outliers are still there
x <- skdata$x
hist(x)
rm(list = ls())  # Clean up
x <- skdata$x
skdata <- read.csv('C:\\Users\\loret\\Desktop\\DataSciencePrep\\R\\R_StatisticsEssentialTraining\\Exercise Files\\Ch04\\04_05_Challenge\\xskew.csv')
skdata
x <- skdata$x
x
hist(x)
x.sq <= x^2
x.sq <- x^2
hist(x.sq)
boxplot(x)
boxplot.stats(x)
boxplot(x.sq)
boxplot.stats(x.sq)
x.fourth <- x^4
hist(x.fourth)
boxplot(x.fourth)
boxplot.stats(x.fourth)
rm(list = ls())
dev.off()
?mtcars
data(mtcars)
mtcars
mean(mtcars$qsec)
mean(mtcars$qsec[mtcars$cyl == 8])
median(mtcars$hp)
mean(mtcars$mpg[mtcars$hp > median(mtcars$hp)])
cyl.8 <- mtcars[mtcars$cyl == 8, ]
View(cyl.8)
View(cyl.8)
View(cyl.8)
mtcars[mtcars$cyl == 8 & mtcars$carb >= 4, ]
rm(list = ls())  # Clean up
data("mtcars")
mtcars
qmt <- mtcars[, 7]
qmt
rm(qmt)
qmtwo <- mtcars[, 7] # mth two
qmtwo
qmt <- mtcars$qsec
qmt
mean(mtcars$qsec)
mean(qmt)
mean(mtcars$qsec & mtcars$cyl == 8)
mean(mtcars$qsec[mtcars$cyl == 8])
mean(mtcars$qsec[mtcars$cyl == 8])
mtcars
Eightcyl <- mtcars$cyl == 8
Eightcyl
Eightcyl <- mtcars[mtcars$cyl == 8]
rm(Eightcyl)
mean(qmt[mtcars$cyl == 8])  # use [] to access rows
median(mtcars$hp)
mean(mtcars$mpg > median(mtcars$hp))
median(mtcars$hp)
mean(mtcars$mpg[mtcars$hp > median(mtcars$hp)])
himedhp <- mtcars$hp > median(mtcars$hp)
mean(mtcars$mpg[himedhp])
cyl.8 <- mtcars$cyl[, mtcars$cyl == 8]
cyl <- mtcars$cyl
cyl
cyl.8 <- cyl[ ,cyl == 8]
cyl.8 <- cyl[cyl == 8]
cyl.8
cyl.8two <- mtcars[mtcars$cyl == 8, ]
cyl.8two
cyl.8
rm(cyl)
rm(cyl.8)
rm(cyl.8two)
cyl.8 <- mtcars[mtcars$cyl == 8, ]
cyl.8
cyl.8[cyl.8 & cyl.8$carb > 4]
cyl.8[cyl.8 & cyl.8$carb > 4, ]
mtcars[cyl.8 & cyl.8$carb > 4, ]
cyl.8
carb.4 <- mtcars[mtcars$carb > 4, ]
carb.4
carb.4 <- mtcars[mtcars$carb = 4 | mtcars$carb > 4 , ]
carb.4 <- mtcars[mtcars$carb = 4 , ]
carb.4 <- mtcars[mtcars$carb == 4 , ]
carb.4
mtcars[cyl.8 & carb.4]
mtcars[cyl.8[carb.4]]
mtcars[cyl.8[carb.4], ]
mtcars[cyl.8[carb.4, ]]
carb.4
carb.4 <- mtcars[mtcars$carb >= 4 , ]
carb.4
mtcars[cyl.8 & carb.4]
rm(carb.4)
mtcars[mtcars$cyl == 8 & mtcars$carb >= 4, ]
mtcars[mtcars$cyl == 8 & mtcars$carb >= 4, ]
mtcars
mtcars[mtcars$mpg > 17 & mtcars$am == 1, ]
frame <- mtcars[mtcars$mpg > 17 & mtcars$am == 1, ]
frame
rm(frame)
higear <- mtcars[cyl.8 & mtcars$gear >= 4, ]
higear
rm(higear)
higear <- mtcars[mtcars$cyl == 8 & mtcars$gear >= 4, ]
higear
higear <- mtcars[mtcars$cyl == 6 & mtcars$gear >= 4, ]
higear
rm(list = ls())
?iris
data(iris)
iris
aggregate(iris$Petal.Width ~ iris$Species, FUN = mean)
aggregate(cbind(iris$Petal.Width, iris$Petal.Length) ~ iris$Species, FUN = mean)
rm(list = ls())  # Clean up
data(iris)
iris
mean(iris$Petal.Width)
aggregate(iris$Petal.Width ~ iris$Species, FUN = mean)
iris
aggregate(iris$Petal.Length ~ iris$Species, FUN = mean)
aggregate(iris$Sepal.Length ~ iris$Species FUN = sum)
aggregate(iris$Sepal.Length ~ iris$Species FUN = sum())
aggregate(iris$Sepal.Length ~ iris$Species, FUN = sum)
aggregate(iris$Sepal.Length ~ iris$Species, FUN = diff)
aggregate(iris$Sepal.Length ~ iris$Species, FUN = sum)
aggregate(cbind(iris$Petal.Length, iris$Petal.Width) ~ iris$Species, FUN = mean)
aggregate(cbind(iris$Petal.Width, iris$Petal.Length) ~ iris$Species, FUN = mean)
aggregate(cbind(iris$Petal.Length, iris$Petal.Width, iris$Sepal.Length) ~ iris$Species, FUN = mean)
data("iris")
iris
mean(iris$Petal.Width)
aggregate(iris$Sepal.Width ~ iris$Species, FUN = mean)
aggregate(iris$Petal.Width ~ iris$Species, FUN = mean)
aggregate(cbind(iris$Sepal.Length, iris$Sepal.Width) ~ iris$Species, FUN = sum)
aggregate(cbind(iris$Petal.Length, iris$Petal.Width) ~ iris$Species, FUN = mean)
rm(list = ls())
write.table(a1, "C:\\Users\\loret\\Desktop\\DataSciencePrep\\R\\R_StatisticsEssentialTraining\\Exercise Files\\Ch05\\longley.a1.txt", sep="\t") # Create & save txt file
data(longley)
a1 <- longley[1:14, 1:6]  # Starting data
a2 <- longley[1:14, 6:7]  # New column to add (with "Year" to match)
b <- longley[15:16, ]     # New rows to add
write.table(a1, "C:\\Users\\loret\\Desktop\\DataSciencePrep\\R\\R_StatisticsEssentialTraining\\Exercise Files\\Ch05\\longley.a1.txt", sep="\t") # Create & save txt file
write.table(a1, "C:\\Users\\loret\\Desktop\\DataSciencePrep\\R\\R_StatisticsEssentialTraining\\Exercise Files\\Ch05\\05_03\\longley.a1.txt", sep="\t") # Create & save txt file
write.table(a2, "C:\\Users\\loret\\Desktop\\DataSciencePrep\\R\\R_StatisticsEssentialTraining\\Exercise Files\\Ch05\\05_03\\longley.a2.txt", sep="\t")
write.table(b, "C:\\Users\\loret\\Desktop\\DataSciencePrep\\R\\R_StatisticsEssentialTraining\\Exercise Files\\Ch05\\05_03\\longley.b.txt", sep="\t")
rm(list=ls()) # Clear out everything to start fresh
a1t <- read.table("C:\\Users\\loret\\Desktop\\DataSciencePrep\\R\\R_StatisticsEssentialTraining\\Exercise Files\\Ch05\\05_03\\longley.a1.txt", sep="\t")
a2t <- read.table("C:\\Users\\loret\\Desktop\\DataSciencePrep\\R\\R_StatisticsEssentialTraining\\Exercise Files\\Ch05\\05_03\\longley.a2.txt", sep="\t")
a.1.2 <- merge(a1t, a2t, by = "Year")  # Merge two data frames
a.1.2  # Check results
b <- read.table("C:\\Users\\loret\\Desktop\\DataSciencePrep\\R\\R_StatisticsEssentialTraining\\Exercise Files\\Ch05\\05_03\\longley.b.txt", sep="\t")
all.data <- rbind(a.1.2, b)  # "Row Bind"
all.data  # Check data
row.names(all.data) <- NULL  # Reset row names
all.data  # Check data
rm(list=ls())  # Clean up
dev.off()
dev.off()
rm(list=ls())  # Clean up
