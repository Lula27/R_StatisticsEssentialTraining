?mtcars
data(mtcars)
mtcars[1:5, ]
mtcars1 <- mtcars[, c(1:4, 6:7, 9:11)]  # Select variables
mtcars1[1:5, ]
pc <- prcomp(mtcars1,
center = TRUE,  # Centers means to 0 (optional)
scale = TRUE)
?prcomp  # Generally preferred
?princomp  # Very slightly different method, similar to S
?prcomp  # Generally preferred
?princomp  # Very slightly different method, similar to S
summary(pc)
plot(pc)
pc
predict(pc)
biplot(pc)
factanal(mtcars1, 1)
factanal(mtcars1, 2)
factanal(mtcars1, 3)
factanal(mtcars1, 4)  # First w/p > .05
rm(list = ls())  # Clean up
factanal(mtcars1, 2)
factanal(mtcars1, 3)
factanal(mtcars1, 4)  # First w/p > .05
rm(list = ls())  # Clean up
dev.off()
browsURL('https://onlinecourses.science.psu.edu/stat505/node/49')
browseURL('https://onlinecourses.science.psu.edu/stat505/node/49')
?cars
data(cars)
cars[1:5, ]
cars[1:5, ]
?mtcars
drop(cars)
rm(cars)
data(mtcars)
mtcars[1:5, ]
cars <- mtcars[ , c(1:4, 6:7, 9:11)]
cars
cars[1:5, ]
pc <- prcomp(cars,
center = TRUE,
scale = TRUE)
summary(pc)
plot(pc)
pc
predict(pc)
biplot(pc)
factanal(cars, 1)
factanal(cars, 2)
factanal(cars, 3)
factanal(cars, 4)
rm(list = ls())
dev.off()
?header
statesResp <- read.csv("C:\\Users\\loret\\Desktop\\DataSciencePrep\\R\\R_StatisticsEssentialTraining\\Exercise Files\\Ch09\\09_05_Challenge\\StateClusterData.csv", header = TRUE)
View(statesResp)
browseURL("http://www.statsoft.com/Textbook/Cluster-Analysis") # Background on cluster analysis
statesResp[1:5, ]
d <- dist(statesResp)
sResp <- statesResp[, c(1:3, 5:12)]
sResp[1:5, ]
rm(sResp)
sResp <- statesResp[, c(1:4, 5:13)]
sResp[1:5, ]
sResp[1:5, ]
rm(sResp)
sResp <- statesResp[, c(1:3, 5:13)]
sResp[1:5, ]
rm(sResp)
sResp <- statesResp[, c(1:4, 5:13)]
sResp[1:5, ]
rm(sResp)
sResp <- statesResp[, c(1:4, 6:13)]
sResp[1:5, ]
View(sResp)
View(sResp)
rm(d)
d <- dist(statesResp)
rm(d)
d <- dist(SResp) # Keep getting warning - N
d <- dist(sResp) # Keep getting warning - N
d
c <- hclust(d)
c
plot(c)
g4 <- cutree(c, k = 4)
g4
rm(sResp)
rm(d)
rm(c)
dev.off()
rm(g4)
d <- dist(statesResp) # Keep getting warning - N
d
c <- hclust(d)
c
plot(c)
g5 <- cutree(c, k = 5)
g4
g5
rect.hclust(c, k = 2, border = "red")
rect.hclust(c, k = 2, border = "yellow")
rect.hclust(c, k = 3, border = "green")
rect.hclust(c, k = 2, border = "yellow")
rect.hclust(c, k = 3, border = "green")
rect.hclust(c, k = 4, border = "yellow")
rect.hclust(c, k = 5, border = "orange")
rect.hclust(c, k = 2, border = "yellow")
rect.hclust(c, k = 3, border = "green")
rect.hclust(c, k = 4, border = "red")
rect.hclust(c, k = 5, border = "purple")
rm(list = ls())
dev.off()
scd <- read.csv("C:\\Users\\loret\\Desktop\\DataSciencePrep\\R\\R_StatisticsEssentialTraining\\Exercise Files\\Ch09\\09_05_Challenge\\StateClusterData.csv", header = TRUE)
View(scd)
View(scd)
rownames(scd) <- scd[,1]  # Use state names for row names
scd[,1] <- NULL  # Remove state names as variable
scd[1:5, ]
d <- dist(scd)  # Distance matrix
c <- hclust(d)  # Get clusters
plot(c)  # Dendrogram
rect.hclust(c, k = 2, border = "gray")
rect.hclust(c, k = 3, border = "blue")
rect.hclust(c, k = 4, border = "green4")
rect.hclust(c, k = 5, border = "darkred")
rm(list = ls())  # Clean up
dev.off()
statesResp <- read.csv("C:\\Users\\loret\\Desktop\\DataSciencePrep\\R\\R_StatisticsEssentialTraining\\Exercise Files\\Ch09\\09_05_Challenge\\StateClusterData.csv", header = TRUE)
statesResp[1:5, ]
rownames(statesResp) <- statesResp[,1]
rm(statesResp)
stSearch <- read.csv("C:\\Users\\loret\\Desktop\\DataSciencePrep\\R\\R_StatisticsEssentialTraining\\Exercise Files\\Ch09\\09_05_Challenge\\StateClusterData.csv", header = TRUE)
stSearch[1:5, ]
rownames(stSearch) <- stSearch[,1]
stSearch
stSearch[1:5, ]
d <- dist(statesResp) # Keep getting warning - N
d <- dist(stSearch) # Keep getting warning - N
rm(d)
stSearch[,1] <- NULL # remove first column (state) because it now has null values
stSearch[1:5, ]
d <- dist(stSearch) # Keep getting warning - N
d
c
plot(c)
c <- hclust(d) # hierarchical cluster
c
plot(c)
rect.hclust(c, k = 2, border = "yellow")
rect.hclust(c, k = 3, border = "green")
rect.hclust(c, k = 4, border = "darkred")
rect.hclust(c, k = 5, border = "blue")
rm(list = ls())
dev.off()
